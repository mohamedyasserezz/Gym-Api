// <auto-generated />
using System;
using Gym_Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gym_Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250325104325_editcategorydescrip")]
    partial class editcategorydescrip
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gym_Api.Data.Models.Assignment", b =>
                {
                    b.Property<int>("Assignment_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Assignment_ID"));

                    b.Property<DateTime>("Assignment_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Coach_ID")
                        .HasColumnType("int");

                    b.Property<double>("CompleteRate")
                        .HasColumnType("float");

                    b.Property<int>("Exercise_ID")
                        .HasColumnType("int");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Assignment_ID");

                    b.HasIndex("Coach_ID");

                    b.HasIndex("Exercise_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.Category", b =>
                {
                    b.Property<int>("Category_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Category_ID"));

                    b.Property<string>("Category_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Category_ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.Coach", b =>
                {
                    b.Property<int>("Coach_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Coach_ID"));

                    b.Property<string>("Availability")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Experience_Years")
                        .HasColumnType("int");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Portfolio_Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Ratings")
                        .HasColumnType("float");

                    b.Property<string>("lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Coach_ID");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.Exercise", b =>
                {
                    b.Property<int>("Exercise_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Exercise_ID"));

                    b.Property<int>("Calories_Burned")
                        .HasColumnType("int");

                    b.Property<int>("Category_ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Difficulty_Level")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Exercise_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target_Muscle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video_URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Exercise_ID");

                    b.HasIndex("Category_ID");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.NutritionPlan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Calories_Needs")
                        .HasColumnType("int");

                    b.Property<int>("Carbs_Needs")
                        .HasColumnType("int");

                    b.Property<int>("Coach_ID")
                        .HasColumnType("int");

                    b.Property<int>("Fats_Needs")
                        .HasColumnType("int");

                    b.Property<int>("Protein_Needs")
                        .HasColumnType("int");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Coach_ID");

                    b.HasIndex("User_ID")
                        .IsUnique();

                    b.ToTable("NutritionPlans");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.Order", b =>
                {
                    b.Property<int>("Order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Order_id"));

                    b.Property<DateTime>("Order_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Order_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Total_Price")
                        .HasColumnType("float");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Order_id");

                    b.HasIndex("User_ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItem_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItem_ID"));

                    b.Property<int>("Order_ID")
                        .HasColumnType("int");

                    b.Property<int>("Product_ID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderItem_ID");

                    b.HasIndex("Order_ID");

                    b.HasIndex("Product_ID");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.Product", b =>
                {
                    b.Property<int>("Product_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("Image_URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock_Quantity")
                        .HasColumnType("int");

                    b.HasKey("Product_ID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.Subscribe", b =>
                {
                    b.Property<int>("Subscribe_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Subscribe_ID"));

                    b.Property<int>("Coach_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Subscribe_ID");

                    b.HasIndex("Coach_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.User", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_ID"));

                    b.Property<DateTime>("BDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fitness_Goal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Payment_History")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Registration_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subscription_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("User_ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.Assignment", b =>
                {
                    b.HasOne("Gym_Api.Data.Models.Coach", "Coach")
                        .WithMany("Assignments")
                        .HasForeignKey("Coach_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gym_Api.Data.Models.Exercise", "Exercise")
                        .WithMany("Assignments")
                        .HasForeignKey("Exercise_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gym_Api.Data.Models.User", "User")
                        .WithMany("Assignments")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");

                    b.Navigation("Exercise");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.Exercise", b =>
                {
                    b.HasOne("Gym_Api.Data.Models.Category", "Category")
                        .WithMany("Exercises")
                        .HasForeignKey("Category_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.NutritionPlan", b =>
                {
                    b.HasOne("Gym_Api.Data.Models.Coach", "Coach")
                        .WithMany("NutritionPlans")
                        .HasForeignKey("Coach_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gym_Api.Data.Models.User", "User")
                        .WithOne("NutritionPlan")
                        .HasForeignKey("Gym_Api.Data.Models.NutritionPlan", "User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.Order", b =>
                {
                    b.HasOne("Gym_Api.Data.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.OrderItem", b =>
                {
                    b.HasOne("Gym_Api.Data.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("Order_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gym_Api.Data.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.Subscribe", b =>
                {
                    b.HasOne("Gym_Api.Data.Models.Coach", "Coach")
                        .WithMany("Subscriptions")
                        .HasForeignKey("Coach_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gym_Api.Data.Models.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.Category", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.Coach", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("NutritionPlans");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.Exercise", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.Product", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Gym_Api.Data.Models.User", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("NutritionPlan")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
